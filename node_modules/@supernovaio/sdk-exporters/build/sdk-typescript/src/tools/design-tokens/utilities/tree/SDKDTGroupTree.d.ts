import { TokenType } from "../../../../model/enums/SDKTokenType";
import { TokenGroup } from "../../../../model/groups/SDKTokenGroup";
import { Token } from "../../../../model/tokens/SDKToken";
import { GroupTreeNode } from "./SDKDTGroupTreeNode";
export type GroupTreeNodeWalker = (node: GroupTreeNode, path: GroupTreeNode[]) => void;
export type TokenTreeElement = Token | TokenGroup;
export declare class GroupTree extends GroupTreeNode {
    childType: TokenType;
    constructor(backingElement: TokenTreeElement);
    static populate(root: TokenTreeElement, elements: Array<TokenTreeElement>, parentChildrenMap: Map<string, Array<TokenTreeElement>>): GroupTree;
}
export declare function buildBrandedElementRoots(elements: TokenTreeElement[]): Map<string, Map<TokenType, GroupTree>>;
