import { DocsBlockCategory } from "../../../enums/SDKDocsBlockCategory";
import { DocsImageRef } from "../support/SDKDocsImageRef";
import { DocsBlockBehavior, DocsBlockBehaviorModel } from "./SDKDocsBlockBehavior";
import { DocsBlockItem, DocsBlockItemModel } from "./SDKDocsBlockItem";
import { DocsBlockOnboarding, DocsBlockOnboardingModel } from "./SDKDocsBlockOnboarding";
export type DocsBlockDefinitionModel = {
    id: string;
    name: string;
    description: string;
    category: DocsBlockCategory;
    icon?: DocsImageRef;
    documentationLink?: string;
    searchKeywords?: Array<string>;
    item: DocsBlockItemModel;
    behavior: DocsBlockBehaviorModel;
    editorOptions?: {
        onboarding?: DocsBlockOnboardingModel;
    };
    appearance?: {
        isBordered?: boolean;
        hasBackground?: boolean;
    };
};
export declare class DocsBlockDefinition {
    /** Unique id of the block. Block id must be unique across all blocks registered to Supernova in preparation for block store. Reserved ids will be created for all core blocks and they'll be installed by default to every exporter */
    id: string;
    /** Defines the name of the block */
    name: string;
    /** Describes the block in more detail */
    description: string;
    /** Block category */
    category: DocsBlockCategory;
    /** Block icon filename */
    icon: DocsImageRef | null;
    /** Link to documentation or resource explaining the behavior of the block and its options */
    documentationLink: string | null;
    searchKeywords: Array<string>;
    /** Primary definition of the block. See DocsBlockItem for more information */
    item: DocsBlockItem;
    /** Primary definition of the layered block behavior. See Block Behaviors for more information */
    behavior: DocsBlockBehavior;
    /** Top-level editor options for the block itself (but not for its items). This configuration has no bearing on front-end side of rendering and is only for editor */
    editorOptions: {
        /** When provided, the first time block is used (for every user individually), onboarding layer will show up for that block, explaining what it is. */
        onboarding: DocsBlockOnboarding | null;
    };
    /** All appearance options for top-level block wrapper */
    appearance: {
        /** With border enabled, a light border will be rendered in editor around the block. For example, rich text have this disabled as it is just a text */
        isBordered: boolean;
        /** When background option is enabled, background color can be set for the block */
        hasBackground: boolean;
    };
    constructor(model: DocsBlockDefinitionModel);
}
