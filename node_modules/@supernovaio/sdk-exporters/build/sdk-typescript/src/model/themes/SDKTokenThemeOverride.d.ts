import { TokenType } from "../enums/SDKTokenType";
import { TokenOrigin } from "../support/SDKTokenOrigin";
import { AnyDimensionTokenRemoteData, AnyOptionTokenRemoteData, AnyStringTokenRemoteData, BlurTokenRemoteData, BorderTokenRemoteData, ColorTokenRemoteData, GradientTokenRemoteData, ShadowTokenRemoteData, TypographyTokenRemoteData } from "../tokens/remote/SDKRemoteTokenData";
import { AnyTokenValue } from "../tokens/SDKTokenValue";
export type TokenThemeOverrideRemoteModel = {
    data: ColorTokenRemoteData | AnyStringTokenRemoteData | TypographyTokenRemoteData | ShadowTokenRemoteData | AnyDimensionTokenRemoteData | BorderTokenRemoteData | GradientTokenRemoteData | BlurTokenRemoteData | AnyOptionTokenRemoteData;
    tokenPersistentId: string;
    type: TokenType;
    origin: TokenOrigin | null;
    createdAt?: string;
    updatedAt?: string;
};
export declare class TokenThemeOverride {
    value: AnyTokenValue;
    tokenId: string;
    type: TokenType;
    origin: TokenOrigin | null;
    createdAt: Date | null;
    updatedAt: Date | null;
    constructor(model: TokenThemeOverrideRemoteModel, value: AnyTokenValue);
    toWriteObject(): TokenThemeOverrideRemoteModel;
    valueToWriteObject(value: AnyTokenValue, type: TokenType): ShadowTokenRemoteData | GradientTokenRemoteData | {
        aliasTo: string;
        value: import("../tokens/remote/SDKRemoteTokenValue").BlurTokenRemoteValue;
    } | {
        aliasTo: string;
        value: import("../tokens/remote/SDKRemoteTokenValue").BorderTokenRemoteValue;
    } | {
        aliasTo: string;
        value: import("../tokens/remote/SDKRemoteTokenValue").ColorTokenRemoteValue;
    } | {
        aliasTo: string;
        value: import("../tokens/remote/SDKRemoteTokenValue").AnyDimensionTokenRemoteValue;
    } | {
        aliasTo: string;
        value: string;
    } | {
        aliasTo: string;
        value: import("../tokens/remote/SDKRemoteTokenValue").TypographyTokenRemoteValue;
    };
}
