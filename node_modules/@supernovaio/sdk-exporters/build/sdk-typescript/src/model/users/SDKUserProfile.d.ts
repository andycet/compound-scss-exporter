export type UserProfileRemoteModel = {
    name?: string;
    nickname?: string;
    avatar?: string;
    onboarding?: UserProfileOnboardingRemoteModel;
};
export type UserProfileOnboardingRemoteModel = {
    companyName?: string;
    numberOfPeopleInOrg?: string;
    numberOfPeopleInDesignTeam?: string;
    department?: string;
    jobTitle?: string;
    phase?: string;
    jobLevel?: string;
};
export type UserProfileTransportModel = UserProfileRemoteModel;
export type UserProfileOnboardingUpdateModel = UserProfileOnboardingRemoteModel;
export type UserProfileUpdateModel = {
    name?: string;
    nickname?: string;
};
export declare class UserProfile {
    /** User name */
    name: string;
    /** User nickname */
    nickname: string | null;
    /** Avatar */
    avatar: string | null;
    /** Onboarding object */
    onboarding: {
        companyName: string | null;
        numberOfPeopleInOrg: string | null;
        numberOfPeopleInDesignTeam: string | null;
        department: string | null;
        jobTitle: string | null;
        phase: string | null;
        jobLevel: string | null;
    } | null;
    constructor(model: UserProfileRemoteModel);
    /** Constructs directly manipulable update object for user profile */
    toProfileUpdateObject(): UserProfileUpdateModel;
    toOnboardingUpdateObject(): UserProfileOnboardingUpdateModel;
    /** Constructs representation that can be used to write full object to remote */
    toRemote(): UserProfileTransportModel;
    /** Constructs representation that can be used to transport the instantiated object as JSON, for example for SSR <> Client use-cases. Reconstruct to class instance using `fromTransport` */
    toTransport(): UserProfileTransportModel;
    /** Reconstructs class from the transport model */
    static fromTransport(model: UserProfileTransportModel): UserProfile;
}
