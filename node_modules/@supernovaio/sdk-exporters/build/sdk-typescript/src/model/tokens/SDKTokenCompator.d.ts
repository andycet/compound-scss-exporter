import { Token } from "./SDKToken";
import { AnyDimensionTokenValue, AnyOptionTokenValue, AnyPlainTokenValue, AnyStringTokenValue, BlurTokenValue, BorderTokenValue, ColorTokenValue, GradientStopValue, GradientTokenValue, ShadowTokenValue, TypographyTokenValue } from "./SDKTokenValue";
export declare class TokenComparator {
    static isEqualTokenValue(a: Token, b: Token): boolean;
    static referencesSameToken(a: AnyPlainTokenValue, b: AnyPlainTokenValue): boolean;
    static anyIsReference(a: AnyPlainTokenValue, b: AnyPlainTokenValue): boolean;
    static isUndefinedValue(a: AnyPlainTokenValue, b: AnyPlainTokenValue): boolean;
    static isEqualBlurTokenValue(a: BlurTokenValue, b: BlurTokenValue): boolean;
    static isEqualBorderTokenValue(a: BorderTokenValue, b: BorderTokenValue): boolean;
    static isEqualColorTokenValue(a: ColorTokenValue, b: ColorTokenValue): boolean;
    static isEqualGradientsTokenValue(a: GradientTokenValue[], b: GradientTokenValue[]): boolean;
    static isEqualGradientTokenValue(a: GradientTokenValue, b: GradientTokenValue): boolean;
    static isEqualGradientStops(a: Array<GradientStopValue>, b: Array<GradientStopValue>): boolean;
    static isEqualDimensionTokenValue(a: AnyDimensionTokenValue, b: AnyDimensionTokenValue): boolean;
    static isEqualShadowsTokenValue(a: ShadowTokenValue[], b: ShadowTokenValue[]): boolean;
    static isEqualShadowTokenValue(a: ShadowTokenValue, b: ShadowTokenValue): boolean;
    static isEqualStringTokenValue(a: AnyStringTokenValue, b: AnyStringTokenValue): boolean;
    static isEqualOptionTokenValue(a: AnyOptionTokenValue, b: AnyOptionTokenValue): boolean;
    static isEqualTypographyTokenValue(a: TypographyTokenValue, b: TypographyTokenValue): boolean;
}
