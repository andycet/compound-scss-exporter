import { DTTokenReferenceResolver } from "../../tools/design-tokens/utilities/SDKDTTokenReferenceResolver";
import { ElementProperty } from "../elements/SDKElementProperty";
import { ElementPropertyValue } from "../elements/values/SDKElementPropertyValue";
import { TokenType } from "../enums/SDKTokenType";
import { BlurTokenRemoteModel, TokenRemoteModel } from "./remote/SDKRemoteTokenModel";
import { BlurTokenRemoteValue } from "./remote/SDKRemoteTokenValue";
import { Token } from "./SDKToken";
import { BlurTokenValue } from "./SDKTokenValue";
export declare class BlurToken extends Token {
    value: BlurTokenValue;
    blurLayers: Array<BlurToken>;
    isVirtual: boolean;
    tokenType: TokenType.blur;
    constructor(versionId: string, baseToken: TokenRemoteModel, value: BlurTokenValue, alias: BlurToken | null, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>);
    static create(versionId: string, brandId: string, name: string, description: string, value: object, alias: BlurToken | null, referenceResolver: DTTokenReferenceResolver, properties: Array<ElementProperty>, propertyValues: Array<ElementPropertyValue>): BlurToken;
    static blurValueFromDefinition(definition: object, referenceResolver: DTTokenReferenceResolver): BlurTokenValue;
    toWriteObject(): BlurTokenRemoteModel;
    static valueToWriteObject(value: BlurTokenValue): {
        aliasTo: string | undefined;
        value: BlurTokenRemoteValue;
    };
}
