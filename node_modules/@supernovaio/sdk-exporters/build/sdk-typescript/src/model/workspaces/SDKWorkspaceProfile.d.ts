export type WorkspaceProfileRemoteModel = {
    name: string;
    handle: string;
    color: string;
    billingDetails?: WorkspaceProfileBillingDetailsRemoteModel;
    avatar?: string;
};
export type WorkspaceProfileBillingDetailsRemoteModel = {
    firstName?: string;
    lastName?: string;
    email?: string;
    companyName?: string;
    companyId?: string;
    notes?: string;
    vat?: string;
    address?: WorkspaceProfileAddressRemoteModel;
};
export type WorkspaceProfileAddressRemoteModel = {
    postal?: string;
    street1?: string;
    street2?: string;
    city?: string;
    country?: string;
    state?: string;
};
export type WorkspaceProfileTransportModel = WorkspaceProfileRemoteModel;
export type WorkspaceProfileUpdateModel = {
    name: string;
    handle: string;
    color: string;
};
export declare class WorkspaceProfile {
    /** Workspace name, doesn't have to be unique across workspace pool */
    name: string;
    /** Workspace handle, unique across entire workspace pool */
    handle: string;
    /** Workspace primary color */
    color: string;
    /** Workspace avatar URL */
    avatar: string | null;
    /** Workspace billing details object */
    billingDetails: {
        firstName: string | null;
        lastName: string | null;
        address: {
            postal: string | null;
            street1: string | null;
            street2: string | null;
            city: string | null;
            country: string | null;
            state: string | null;
        } | null;
        email: string | null;
        companyName: string | null;
        companyId: string | null;
        notes: string | null;
        vat: string | null;
    } | null;
    constructor(model: WorkspaceProfileRemoteModel);
    /** Constructs directly manipulable update object for workspace profile */
    toProfileUpdateObject(): WorkspaceProfileUpdateModel;
    /** Constructs representation that can be used to write full object to remote */
    toRemote(): WorkspaceProfileTransportModel;
    /** Constructs representation that can be used to transport the instantiated object as JSON, for example for SSR <> Client use-cases. Reconstruct to class instance using fromTransport */
    toTransport(): WorkspaceProfileTransportModel;
    /** Reconstructs class from the transport model */
    static fromTransport(model: WorkspaceProfileTransportModel): WorkspaceProfile;
}
