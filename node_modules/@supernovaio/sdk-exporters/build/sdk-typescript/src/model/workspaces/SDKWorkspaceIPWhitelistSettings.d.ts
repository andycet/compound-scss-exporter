export type IPWhitelistEntry = {
    isEnabled: boolean;
    name?: string;
    range: string;
};
export type WorkspaceIPWhitelistSettingsRemoteModel = {
    isEnabledForCloud: boolean;
    isEnabledForDocs: boolean;
    entries: Array<IPWhitelistEntry>;
};
export type WorkspaceIPWhitelistSettingsUpdateModel = WorkspaceIPWhitelistSettingsRemoteModel;
export type WorkspaceIPWhitelistSettingsTransportModel = WorkspaceIPWhitelistSettingsRemoteModel;
export declare class WorkspaceIPWhitelistSettings {
    /** IP Whitelisting is enforced for the cloud access */
    isEnabledForCloud: boolean;
    /** IP Whitelisting is enforced for the docs access */
    isEnabledForDocs: boolean;
    /** All allowed IP ranges */
    entries: Array<IPWhitelistEntry>;
    constructor(model: WorkspaceIPWhitelistSettingsRemoteModel);
    static initial(): WorkspaceIPWhitelistSettings;
    toUpdateObject(): WorkspaceIPWhitelistSettingsUpdateModel;
    toRemote(): WorkspaceIPWhitelistSettingsTransportModel;
    toTransport(): WorkspaceIPWhitelistSettingsTransportModel;
    static fromTransport(model: WorkspaceIPWhitelistSettingsTransportModel): WorkspaceIPWhitelistSettings;
}
