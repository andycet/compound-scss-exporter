import { WorkspaceProfile, WorkspaceProfileRemoteModel, WorkspaceProfileTransportModel } from "./SDKWorkspaceProfile";
import { WorkspaceSubscription, WorkspaceSubscriptionRemoteModel, WorkspaceSubscriptionTransportModel } from "./SDKWorkspaceSubscription";
export type WorkspaceRemoteModel = {
    id: string;
    subscription: WorkspaceSubscriptionRemoteModel;
    profile: WorkspaceProfileRemoteModel;
};
export type WorkspaceTransportModel = {
    id: string;
    subscription: WorkspaceSubscriptionTransportModel;
    profile: WorkspaceProfileTransportModel;
};
export declare class Workspace {
    /** Unique identifier of the workspace */
    id: string;
    /** Workspace profile with all information about billing, workspace, avatars etc. */
    profile: WorkspaceProfile;
    /** Workspace subscription configuration */
    subscription: WorkspaceSubscription;
    constructor(model: WorkspaceRemoteModel);
    /** Constructs representation that can be used to write full object to remote */
    toRemote(): WorkspaceRemoteModel;
    /** Constructs representation that can be used to transport the instantiated object as JSON, for example for SSR <> Client use-cases. Reconstruct to class instance using `fromTransport` */
    toTransport(): WorkspaceTransportModel;
    /** Reconstructs class from the transport model */
    static fromTransport(model: WorkspaceTransportModel): Workspace;
}
