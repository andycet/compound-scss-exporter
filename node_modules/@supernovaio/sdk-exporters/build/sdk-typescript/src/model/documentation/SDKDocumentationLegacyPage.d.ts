import { DocumentationLegacyItemType } from "../enums/SDKDocumentationLegacyItemType";
import { ExporterCustomBlock } from "../exporters/custom_blocks/SDKExporterCustomBlock";
import { DocumentationLegacyConfiguration } from "./SDKDocumentationLegacyConfiguration";
import { DocumentationLegacyGroup } from "./SDKDocumentationLegacyGroup";
import { DocumentationLegacyItem, DocumentationLegacyItemModel } from "./SDKDocumentationLegacyItem";
import { DocumentationLegacyPageBlock, DocumentationLegacyPageBlockModel } from "./SDKDocumentationLegacyPageBlock";
export type DocumentationLegacyPageModel = {
    path: string;
    blocks?: Array<DocumentationLegacyPageBlockModel>;
} & DocumentationLegacyItemModel;
export declare class DocumentationLegacyPage extends DocumentationLegacyItem {
    /** All blocks that were defined on the top level of the page */
    blocks?: Array<DocumentationLegacyPageBlock>;
    /** Containing group. Can either be true group (abstract), or tab group */
    parent: DocumentationLegacyGroup;
    /** Internal */
    deployedUrl: string | null;
    /** Internal */
    relativeUrl: string;
    type: DocumentationLegacyItemType.page;
    /** Internal */
    editorUrl: string | null;
    constructor(model: DocumentationLegacyPageModel, customBlocks?: Array<ExporterCustomBlock>, configuration?: DocumentationLegacyConfiguration);
    /** Internal: Modifies object with new paths. Don't use outside SDK environment as it doesn't propagate the data back to source */
    internalOverridePaths(deployed: string | null, editor: string | null): void;
    /** Internal: Sets new parent. Used when manipulating with object internally. Don't use outside SDK environment */
    setParent(parent: DocumentationLegacyGroup): void;
    /** Retrieve editor page URL that can be opened */
    editorPageUrl(): string | null;
    /** Retrieve documentation page URL, if the documentation was already deployed (either default or custom domain) */
    deployedPageUrl(): string | null;
    /** Retrieve relative page path without the associated domain. Will work even when documentation was not yet deployed */
    relativePageUrl(): string | null;
}
