import { DocumentationLegacyConfiguration } from "../../model/documentation/SDKDocumentationLegacyConfiguration";
import { DocumentationLegacyGroupModel } from "../../model/documentation/SDKDocumentationLegacyGroup";
import { DocumentationLegacyItem, DocumentationLegacyItemModel } from "../../model/documentation/SDKDocumentationLegacyItem";
import { DocumentationLegacyPageModel } from "../../model/documentation/SDKDocumentationLegacyPage";
import { ExporterCustomBlock } from "../../model/exporters/custom_blocks/SDKExporterCustomBlock";
export declare class DocumentationLegacyItemResolver {
    hashedItems: Map<string, DocumentationLegacyItemModel>;
    resolvedItems: Map<string, DocumentationLegacyItem>;
    customBlocks: Array<ExporterCustomBlock>;
    configuration: DocumentationLegacyConfiguration;
    workspaceHandle: string;
    versionId: string;
    designSystemId: string;
    designSystemName: string;
    docsUrl: string | undefined;
    constructor(customBlocks: Array<ExporterCustomBlock>, configuration: DocumentationLegacyConfiguration, designSystemId: string, designSystemName: string, versionId: string, workspaceHandle: string, docsUrl: string | undefined);
    resolveItemData(pageDetails: Array<DocumentationLegacyPageModel>, groupDetails: Array<DocumentationLegacyGroupModel>): Array<DocumentationLegacyItem>;
    private resolveItemsForGroup;
    private resolveBlockChains;
    private resolveBlockGroup;
    /** Create URL pointing to the deployed documentation page hosted on Supernova side. Will be empty if there was nothing deployed, or if not hosted at Supernova */
    private deployedUrl;
    /** Create editor URL pointing to editable page. */
    private editorUrl;
    /** Create page URL or group URL pointing to the first contained page */
    private pageUrl;
    /** Find first showable page from the top of the provided root */
    private firstPageFromTop;
    /** Slugify text to be usable as URL */
    private slugify;
}
