import { Source, SourceRemoteModelCloud } from "../../model/support/SDKSource";
import { DataCore } from "../data/SDKDataCore";
import { RemoteBrandIdentifier, RemoteVersionIdentifier } from "./SDKRemoteIdentifiers";
export declare class AreaDataSources {
    /** Internal: Engine */
    private dataCore;
    constructor(dataCore: DataCore);
    /** Retrieves a single source by its id
     * @param from - Remote version to fetch from
     * @returns Single data source
     */
    getDataSourceById(from: RemoteVersionIdentifier, sourceId: string): Promise<Source>;
    /** Retrieves all sources associated with specified design system
     * @param from - Remote version to fetch from
     * @returns All data sources in the specified version
     */
    getDataSources(from: RemoteVersionIdentifier): Promise<Array<Source>>;
    linkFigmaSource(from: RemoteBrandIdentifier, url: string, options: {
        scopes: {
            tokens: boolean;
            components: boolean;
            assets: boolean;
            documentationFrames: boolean;
        };
        autoImport: SourceRemoteModelCloud["autoImportMode"];
        themeId: string | null;
    }): Promise<Source>;
    updateFigmaSource(from: RemoteVersionIdentifier, sourceId: string, options: {
        scopes?: {
            tokens: boolean;
            components: boolean;
            assets: boolean;
            documentationFrames: boolean;
        };
        autoImport?: SourceRemoteModelCloud["autoImportMode"];
        themeId?: string | null;
    }): Promise<Source>;
    updateFigmaSourceClaimOwnership(from: RemoteVersionIdentifier, sourceId: string): Promise<Source>;
    deleteFigmaSource(from: RemoteVersionIdentifier, sourceId: string): Promise<void>;
}
